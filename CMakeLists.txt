CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(unison)

FILE(GLOB_RECURSE unison_includes ${CMAKE_SOURCE_DIR}/*.h)
FILE(GLOB_RECURSE unison_srcs     ${CMAKE_SOURCE_DIR}/*.cpp)

# check for Qt4
SET(QT_MIN_VERSION "4.5.0")
FIND_PACKAGE(Qt4 REQUIRED)
SET(QT_USE_QTNETWORK 1)
SET(QT_USE_QTXML 1)
EXEC_PROGRAM(${QT_QMAKE_EXECUTABLE} ARGS "-query QT_INSTALL_TRANSLATIONS" OUTPUT_VARIABLE QT_TRANSLATIONS_DIR)
IF(EXISTS "${QT_TRANSLATIONS_DIR}")
	MESSAGE("-- Found Qt translations in ${QT_TRANSLATIONS_DIR}")
	ADD_DEFINITIONS(-D'QT_TRANSLATIONS_DIR="${QT_TRANSLATIONS_DIR}"')
ENDIF(EXISTS "${QT_TRANSLATIONS_DIR}")
IF(NOT WIN32)
	STRING(REPLACE "-DQT_DLL" "" QT_DEFINITIONS "${QT_DEFINITIONS}")
ENDIF(NOT WIN32)
INCLUDE(${QT_USE_FILE})

# Compiler flags
SET(CMAKE_C_FLAGS "-g -Wall -ftree-vectorize ${CMAKE_C_FLAGS}")
SET(CMAKE_CXX_FLAGS "-g -fno-exceptions -Wall -ftree-vectorize ${CMAKE_CXX_FLAGS}")

#Directories
ADD_SUBDIRECTORY(src)

#Pre-processing
QT4_AUTOMOC(${unison_srcs})

#Output
ADD_EXECUTABLE(unisonstudio ${unison_srcs} ${unison_includes})


